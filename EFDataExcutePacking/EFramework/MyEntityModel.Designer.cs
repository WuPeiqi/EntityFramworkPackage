//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace EFramework
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WuTestEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WuTestEntities”部分中的连接字符串初始化新 WuTestEntities 对象。
        /// </summary>
        public WuTestEntities() : base("name=WuTestEntities", "WuTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WuTestEntities 对象。
        /// </summary>
        public WuTestEntities(string connectionString) : base(connectionString, "WuTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WuTestEntities 对象。
        /// </summary>
        public WuTestEntities(EntityConnection connection) : base(connection, "WuTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<R_CourseAndUser> R_CourseAndUser
        {
            get
            {
                if ((_R_CourseAndUser == null))
                {
                    _R_CourseAndUser = base.CreateObjectSet<R_CourseAndUser>("R_CourseAndUser");
                }
                return _R_CourseAndUser;
            }
        }
        private ObjectSet<R_CourseAndUser> _R_CourseAndUser;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_Book> T_Book
        {
            get
            {
                if ((_T_Book == null))
                {
                    _T_Book = base.CreateObjectSet<T_Book>("T_Book");
                }
                return _T_Book;
            }
        }
        private ObjectSet<T_Book> _T_Book;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_Course> T_Course
        {
            get
            {
                if ((_T_Course == null))
                {
                    _T_Course = base.CreateObjectSet<T_Course>("T_Course");
                }
                return _T_Course;
            }
        }
        private ObjectSet<T_Course> _T_Course;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_User> T_User
        {
            get
            {
                if ((_T_User == null))
                {
                    _T_User = base.CreateObjectSet<T_User>("T_User");
                }
                return _T_User;
            }
        }
        private ObjectSet<T_User> _T_User;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 R_CourseAndUser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToR_CourseAndUser(R_CourseAndUser r_CourseAndUser)
        {
            base.AddObject("R_CourseAndUser", r_CourseAndUser);
        }
    
        /// <summary>
        /// 用于向 T_Book EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Book(T_Book t_Book)
        {
            base.AddObject("T_Book", t_Book);
        }
    
        /// <summary>
        /// 用于向 T_Course EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Course(T_Course t_Course)
        {
            base.AddObject("T_Course", t_Course);
        }
    
        /// <summary>
        /// 用于向 T_User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_User(T_User t_User)
        {
            base.AddObject("T_User", t_User);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WuTestModel", Name="R_CourseAndUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class R_CourseAndUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 R_CourseAndUser 对象。
        /// </summary>
        /// <param name="nid">Nid 属性的初始值。</param>
        public static R_CourseAndUser CreateR_CourseAndUser(global::System.Int32 nid)
        {
            R_CourseAndUser r_CourseAndUser = new R_CourseAndUser();
            r_CourseAndUser.Nid = nid;
            return r_CourseAndUser;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Nid
        {
            get
            {
                return _Nid;
            }
            set
            {
                if (_Nid != value)
                {
                    OnNidChanging(value);
                    ReportPropertyChanging("Nid");
                    _Nid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Nid");
                    OnNidChanged();
                }
            }
        }
        private global::System.Int32 _Nid;
        partial void OnNidChanging(global::System.Int32 value);
        partial void OnNidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                OnCourseIdChanging(value);
                ReportPropertyChanging("CourseId");
                _CourseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseId");
                OnCourseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CourseId;
        partial void OnCourseIdChanging(Nullable<global::System.Int32> value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WuTestModel", Name="T_Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_Book : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_Book 对象。
        /// </summary>
        /// <param name="nid">Nid 属性的初始值。</param>
        public static T_Book CreateT_Book(global::System.Int32 nid)
        {
            T_Book t_Book = new T_Book();
            t_Book.Nid = nid;
            return t_Book;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Nid
        {
            get
            {
                return _Nid;
            }
            set
            {
                if (_Nid != value)
                {
                    OnNidChanging(value);
                    ReportPropertyChanging("Nid");
                    _Nid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Nid");
                    OnNidChanged();
                }
            }
        }
        private global::System.Int32 _Nid;
        partial void OnNidChanging(global::System.Int32 value);
        partial void OnNidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Book
        {
            get
            {
                return _Book;
            }
            set
            {
                OnBookChanging(value);
                ReportPropertyChanging("Book");
                _Book = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Book");
                OnBookChanged();
            }
        }
        private global::System.String _Book;
        partial void OnBookChanging(global::System.String value);
        partial void OnBookChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private global::System.String _PublishDate;
        partial void OnPublishDateChanging(global::System.String value);
        partial void OnPublishDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WuTestModel", Name="T_Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_Course : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_Course 对象。
        /// </summary>
        /// <param name="nid">Nid 属性的初始值。</param>
        public static T_Course CreateT_Course(global::System.Int32 nid)
        {
            T_Course t_Course = new T_Course();
            t_Course.Nid = nid;
            return t_Course;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Nid
        {
            get
            {
                return _Nid;
            }
            set
            {
                if (_Nid != value)
                {
                    OnNidChanging(value);
                    ReportPropertyChanging("Nid");
                    _Nid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Nid");
                    OnNidChanged();
                }
            }
        }
        private global::System.Int32 _Nid;
        partial void OnNidChanging(global::System.Int32 value);
        partial void OnNidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private global::System.String _Course;
        partial void OnCourseChanging(global::System.String value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Teacher
        {
            get
            {
                return _Teacher;
            }
            set
            {
                OnTeacherChanging(value);
                ReportPropertyChanging("Teacher");
                _Teacher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Teacher");
                OnTeacherChanged();
            }
        }
        private global::System.String _Teacher;
        partial void OnTeacherChanging(global::System.String value);
        partial void OnTeacherChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WuTestModel", Name="T_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_User 对象。
        /// </summary>
        /// <param name="nid">Nid 属性的初始值。</param>
        public static T_User CreateT_User(global::System.Int32 nid)
        {
            T_User t_User = new T_User();
            t_User.Nid = nid;
            return t_User;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Nid
        {
            get
            {
                return _Nid;
            }
            set
            {
                if (_Nid != value)
                {
                    OnNidChanging(value);
                    ReportPropertyChanging("Nid");
                    _Nid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Nid");
                    OnNidChanged();
                }
            }
        }
        private global::System.Int32 _Nid;
        partial void OnNidChanging(global::System.Int32 value);
        partial void OnNidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }

    #endregion
    
}
